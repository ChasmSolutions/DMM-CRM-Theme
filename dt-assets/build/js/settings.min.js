function switch_preference(preference_key,type=null){return makeRequest("post","users/switch_preference",{preference_key:preference_key,type:type})}function change_password(){let translation=wpApiSettingsPage.translations;const p1=jQuery("#password1"),p2=jQuery("#password2"),message=jQuery("#password-message");message.empty(),p1.val()===p2.val()?makeRequest("post","users/change_password",{password:p1}).done((data=>{console.log(data),message.html(translation.changed)})).fail(handleAjaxError):message.append(translation.pass_does_not_match)}function load_locations(){makeRequest("GET","user/my").done((data=>{if("undefined"!=typeof dtMapbox)dtMapbox.post_type="user",write_results_box();else{let typeahead=Typeahead[".js-typeahead-location_grid"];typeahead&&(typeahead.items=[],typeahead.comparedItems=[],typeahead.label.container.empty(),typeahead.adjustInputSize()),void 0!==data.locations.location_grid&&data.locations.location_grid.forEach((location=>{typeahead.addMultiselectItemLayout({ID:location.id.toString(),name:location.label})}))}})).catch((e=>{console.log("error in locations"),console.log(e)}))}if(jQuery(document).ready((function(){window.current_user_lookup=wpApiSettingsPage.current_user_id,load_locations()})),"undefined"==typeof dtMapbox){let typeaheadTotals={};window.Typeahead[".js-typeahead-location_grid"]||$.typeahead({input:".js-typeahead-location_grid",minLength:0,accent:!0,searchOnFocus:!0,maxItem:20,dropdownFilter:[{key:"group",value:"focus",template:window.lodash.escape(window.wpApiShare.translations.regions_of_focus),all:window.lodash.escape(window.wpApiShare.translations.all_locations)}],source:{focus:{display:"name",ajax:{url:wpApiShare.root+"dt/v1/mapping_module/search_location_grid_by_name",data:{s:"{{query}}",filter:function(){return window.lodash.get(window.Typeahead[".js-typeahead-location_grid"].filters.dropdown,"value","all")}},beforeSend:function(xhr){xhr.setRequestHeader("X-WP-Nonce",wpApiShare.nonce)},callback:{done:function(data){return void 0!==typeaheadTotals&&(typeaheadTotals.field=data.total),data.location_grid}}}}},display:"name",templateValue:"{{name}}",dynamic:!0,multiselect:{matchOn:["ID"],data:function(){return[]},callback:{onCancel:function(node,item){delete_location_grid(item.ID)}}},callback:{onClick:function(node,a,item,event){add_location_grid(item.ID)},onReady(){this.filters.dropdown={key:"group",value:"focus",template:window.lodash.escape(window.wpApiShare.translations.regions_of_focus)},this.container.removeClass("filter").find("."+this.options.selector.filterButton).html(window.lodash.escape(window.wpApiShare.translations.regions_of_focus))},onResult:function(node,query,result,resultCount){resultCount=typeaheadTotals.location_grid;let text=TYPEAHEADS.typeaheadHelpText(resultCount,query,result);$("#location_grid-result-container").html(text)},onHideLayout:function(){$("#location_grid-result-container").html("")}}})}let add_location_grid=value=>makeRequest("POST","users/user_location",{grid_id:value}),delete_location_grid=value=>makeRequest("DELETE","users/user_location",{grid_id:value}),update_user=(key,value)=>makeRequest("POST","user/update",{[key]:value},"dt/v1/"),dateFields=["start_date","end_date"];dateFields.forEach((key=>{$(`#${key}.date-picker`).datepicker({onSelect:function(date){let start_date=$("#start_date").val(),end_date=$("#end_date").val();start_date&&end_date&&moment(start_date)<moment(end_date)?$("#add_unavailable_dates").removeAttr("disabled"):$("#add_unavailable_dates").attr("disabled",!0)},dateFormat:"yy-mm-dd",changeMonth:!0,changeYear:!0})})),$("#add_unavailable_dates").on("click",(function(){let start_date=$("#start_date").val(),end_date=$("#end_date").val();$("#add_unavailable_dates_spinner").addClass("active"),update_user("add_unavailability",{start_date:start_date,end_date:end_date}).then((resp=>{$("#add_unavailable_dates_spinner").removeClass("active"),$("#start_date").val(""),$("#end_date").val(""),display_dates_unavailable(resp)}))}));let display_dates_unavailable=(list=[],first_run)=>{let date_unavailable_table=$("#unavailable-list"),rows="";(list=window.lodash.orderBy(list,["start_date"],"desc")).forEach((range=>{rows+=`<tr>\n        <td>${window.lodash.escape(range.start_date)}</td>\n        <td>${window.lodash.escape(range.end_date)}</td>\n        <td>\n            <button class="button hollow tiny alert remove_dates_unavailable" data-id="${window.lodash.escape(range.id)}" style="margin-bottom: 0">\n            <i class="fi-x"></i> ${window.lodash.escape(wpApiSettingsPage.translations.delete)}</button>\n        </td>\n      </tr>`})),(rows||!rows&&!first_run)&&date_unavailable_table.html(rows)};display_dates_unavailable(wpApiSettingsPage.custom_data.availability,!0),$(document).on("click",".remove_dates_unavailable",(function(){let id=$(this).data("id");update_user("remove_unavailability",id).then((resp=>{display_dates_unavailable(resp)}))}));let status_buttons=$(".status-button"),color_workload_buttons=name=>{if(status_buttons.css("background-color",""),status_buttons.addClass("hollow"),name){let selected=$(`.status-button[name=${name}]`);selected.removeClass("hollow"),selected.css("background-color",window.lodash.get(wpApiSettingsPage,`workload_status_options.${name}.color`)),selected.blur()}};color_workload_buttons(wpApiSettingsPage.workload_status),status_buttons.on("click",(function(){$("#workload-spinner").addClass("active");let name=$(this).attr("name");color_workload_buttons(name),update_user("workload_status",name).then((()=>{$("#workload-spinner").removeClass("active")})).fail((()=>{status_buttons.css("background-color",""),$("#workload-spinner").removeClass("active"),status_buttons.addClass("hollow")}))})),$("button.dt_multi_select").on("click",(function(){let fieldKey=$(this).data("field-key"),optionKey=$(this).attr("id");$(`#${fieldKey}-spinner`).addClass("active");let field=jQuery(`[data-field-key="${fieldKey}"]#${optionKey}`);field.addClass("submitting-select-button");let action="add",update_request=null;field.hasClass("selected-select-button")?(action="delete",update_request=update_user("remove_"+fieldKey,optionKey)):(field.removeClass("empty-select-button"),field.addClass("selected-select-button"),update_request=update_user("add_"+fieldKey,optionKey)),update_request.then((()=>{field.removeClass("submitting-select-button selected-select-button"),field.blur(),field.addClass("delete"===action?"empty-select-button":"selected-select-button"),$(`#${fieldKey}-spinner`).removeClass("active")})).catch((err=>{field.removeClass("submitting-select-button selected-select-button"),field.addClass("add"===action?"empty-select-button":"selected-select-button"),handleAjaxError(err)}))})),$("select.select-field").change((e=>{const id=$(e.currentTarget).attr("id"),val=$(e.currentTarget).val();$(`#${id}-spinner`).addClass("active"),update_user(id,val).then((()=>{$(`#${id}-spinner`).removeClass("active")})).catch(handleAjaxError)})),$.typeahead({input:".js-typeahead-people_groups",minLength:0,accent:!0,searchOnFocus:!0,maxItem:20,source:TYPEAHEADS.typeaheadPeopleGroupSource("people_groups","dt/v1/people-groups/compact/"),display:["name","label"],templateValue:"{{name}}",dynamic:!0,multiselect:{matchOn:["ID"],data:function(){return wpApiSettingsPage.user_people_groups.map((g=>({ID:g.ID,name:g.post_title})))},callback:{onCancel:function(node,item){update_user("remove_people_groups",item.ID)}}},callback:{onClick:function(node,a,item,event){update_user("add_people_groups",item.ID),this.addMultiselectItemLayout(item),event.preventDefault(),this.hideLayout(),this.resetInput()},onResult:function(node,query,result,resultCount){let text=TYPEAHEADS.typeaheadHelpText(resultCount,query,result);$("#people_groups-result-container").html(text)},onHideLayout:function(){$("#people_groups-result-container").html("")}}});
//# sourceMappingURL=settings.min.js.map
